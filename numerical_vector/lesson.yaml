- Class: meta
  Course: R Programming
  Lesson: nemerical vector
  Author: prof. hswoo
  Type: Coursera
  Organization: Daejeon Univ.
  Version: 2015.1.10.0.1

- Class: text
  Output: 이번 강의는 R 프로그래밍 언어에서 사용되는 숫자 벡터를 학습합니다. 

- Class: text
  Output: 학습 도중에 R과 관련하여 특정 토픽에 추가 정보가 필요하면, help.start()를 타이핑합니다. 
    그러면 RStudio, 웹 브라우저 등등 설정에 따라서 R 메뉴가 호출됩니다.  혹시 정보가 부족하면 
    웹 서칭을 해보는 것도 한 방법입니다.

- Class: text
  Output: R에서 벡터는 스칼라의 조합으로 연속적인 값의 조합이라 할 수 있습니다.   

- Class: text
  Output: '벡터는 c() 함수를 이용하여 작성되며, 변수와 매우 유사합니다.  즉, 벡터변수 이름을 생성하고 값을 대입하기 위해서는
     벡터변수이름, 기호(<- 또는 =), c(값1, 값2, ..., 값n)을 입력합니다.  벡터변수이름은 영문자를 처음에 사용하고
     이후 숫자를 혼용할 수 있습니다.'

- Class: text
  Output: '숫자형 데이터는 숫자 벡터를 이용하여 저장할 수 있습니다. 숫자는 정수형과 실수형이 모두 사용가능하며,
           혼용될 때는 실수형으로 대체하여 표기합니다.'

- Class: cmd_question
  Output: 숫자 벡터를 학습하기 위하여, 벡터변수 vx 를 선언하고 c() 함수와 정수값(3,4,6)을 이용, vx에 대입해 봅시다.   
  CorrectAnswer: vx <- c(3,4,6)
  AnswerTests: any_of_exprs('vx <- c(3,4,6)', 'vx<-c(3,4,6)')
  Hint: '다음을 입력 vx <- c(3,4,6).  대입연산자 좌우에 빈칸을 입력하는 것이 중요합니다. 하지만 화살표는 `<`와 `-` 사이에 빈칸이 없어야 합니다.'

- Class: text
  Output: 계산식에서 연산자 좌우의 빈칸은 중요하지 않습니다. 

- Class: cmd_question
  Output: 계산식이 대입된 벡터변수의 값을 확인하기 위해서는 변수값을 인쇄할 필요가 있으며, 
     R에서는 해당 벡터변수이름을 입력합니다.  한번 해봅시다.
  CorrectAnswer: vx
  AnswerTests: any_of_exprs('vx', 'print(vx)')
  Hint: 다음을 입력 vx.

- Class: cmd_question
  Output: print(벡터변수이름) 함수를 이용하면 보다 명확하게 벡터변수의 값을 인쇄할 수 있습니다. 한번 해봅시다.
  CorrectAnswer: print(vx)
  AnswerTests: any_of_exprs('vx', 'print(vx)')
  Hint: 다음을 입력 print(vx).

- Class: cmd_question
  Output: 이제, 실수형 벡터변수를 학습하기 위하여, 벡터변수 vy 를 선언하고 c() 함수와 실수값(3.1,3.14,4.1)을 이용, 
     vy에 대입해 봅시다. 
  CorrectAnswer: vy <- c(3.1,3.14,4.1)
  AnswerTests: any_of_exprs('vy <- c(3.1,3.14,4.1)', 'vy<-c(3.1,3.14,4.1)')
  Hint: '다음을 입력 vy <- c(3.1,3.14,4.1).  대입연산자 좌우에 빈칸을 입력하는 것이 중요합니다. 하지만 화살표는 `<`와 `-` 사이에 빈칸이 없어야 합니다.'

- Class: text
  Output: 계산식에서 연산자 좌우의 빈칸은 중요하지 않습니다. 

- Class: cmd_question
  Output: 계산식이 대입된 벡터변수의 값을 확인하기 위해서는 변수값을 인쇄할 필요가 있으며, 
     R에서는 해당 벡터변수이름 vy를 입력합니다.  한번 해봅시다.
  CorrectAnswer: vy
  AnswerTests: any_of_exprs('vy', 'print(vy)')
  Hint: 다음을 입력 vy.

- Class: cmd_question
  Output: print(벡터변수이름) 함수를 이용하면 보다 명확하게 벡터변수의 값을 인쇄할 수 있습니다. 한번 해봅시다.
  CorrectAnswer: print(vy)
  AnswerTests: any_of_exprs('vy', 'print(vy)')
  Hint: 다음을 입력 print(vy).

- Class: cmd_question
  Output: 이제, 정수와 실수가 혼용된 벡터변수를 학습하기 위하여, 벡터변수 vz 를 선언하고 c() 함수와 
      정수 및 실수가 혼용된 값(3,3.14,4)을 이용, vz에 대입해 봅시다. 
      참고로 혼용될 때는 실수형으로 대체하여 표기합니다. 
  CorrectAnswer: vz <- c(3,3.14,4)
  AnswerTests: any_of_exprs('vz <- c(3,3.14,4)', 'vz <- c(3,3.14,4)')
  Hint: '다음을 입력 vz <- c(3,3.14,4).  대입연산자 좌우에 빈칸을 입력하는 것이 중요합니다. 하지만 화살표는 `<`와 `-` 사이에 빈칸이 없어야 합니다.'

- Class: text
  Output: 계산식에서 연산자 좌우의 빈칸은 중요하지 않습니다. 

- Class: cmd_question
  Output: 계산식이 대입된 벡터변수의 값을 확인하기 위해서는 변수값을 인쇄할 필요가 있으며, 
     R에서는 해당 벡터변수이름을 입력합니다.  한번 해봅시다.
  CorrectAnswer: vz
  AnswerTests: any_of_exprs('vz', 'print(vz)')
  Hint: 다음을 입력 vz.

- Class: cmd_question
  Output: print(벡터변수이름) 함수를 이용하면 보다 명확하게 벡터변수의 값을 인쇄할 수 있습니다. 한번 해봅시다.
  CorrectAnswer: print(vz)
  AnswerTests: any_of_exprs('vz', 'print(vz)')
  Hint: 다음을 입력 print(vz).

- Class: text
  Output: 이제 숫자형 벡터변수에 대한 학습을 마감할 시간입니다.  

- Class: mult_question  
  Output: 마감하기 전에, 다음 문제를 풀어봅시다.  
     벡터변수 vv에 c(1,2.1,3,4.1)를 대입할 때, vv의 인쇄 결과로 맞는 것은? 
  AnswerChoices: 1.0 2.1 3.0 4;1 2 3 4;1.0 2.1 3.0 4.1;1 2.1 3 4.1
  CorrectAnswer: 1.0 2.1 3.0 4.1
  AnswerTests: omnitest(correctVal= '1.0 2.1 3.0 4.1')
  Hint: 'R에서 숫자형 벡터에서 정수와 실수가 혼용될 때는 모두 실수로 표기한다는 것을 기억하세요.'

